{"version":3,"file":"static/js/217.9e82cab6.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.ts","components/Cast/Cast.tsx","components/RequestError/RequestError.styled.ts","components/RequestError/RequestError.tsx","helpers/moviesMaper.ts","services/moviesApi.ts","helpers/actorsMaper.ts","helpers/reviewsMaper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[6]}px;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    flex-direction: row;\n    gap: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const ActorItem = styled.li`\n  border-radius: 10px;\n  box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -webkit-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -moz-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 2 * 16px) / 3);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 3 * 16px) / 4);\n  }\n`;\n\nexport const ActorImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 10px 10px 0 0;\n  overflow: hidden;\n`;\n\nexport const ActorInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: 16px 10px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastsById, IMAGE_URL } from '../../services';\nimport { IActor } from '../../interfaces';\n\nimport RequestError from '../RequestError';\nimport Loader from '../Loader';\n\nimport { ActorsList, ActorItem, ActorImg, ActorInfoWrapper } from './Cast.styled';\n\nconst Cast: React.FC = () => {\n  const { movieId } = useParams<string>();\n  const [actors, setActors] = useState<IActor[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    async function getActorsByMovieId(movieId: number) {\n      try {\n        setIsFetching(true);\n        const result = await getCastsById(movieId);\n        setActors(result);\n        setError(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setActors([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n\n    getActorsByMovieId(Number(movieId));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && !isFetching && <RequestError />}\n      {isFetching && !error && <Loader />}\n\n      {actors?.length > 0 && (\n        <ActorsList>\n          {actors.map(({ id, name, profile_path, character }) => (\n            <ActorItem key={id}>\n              <ActorImg\n                src={\n                  profile_path\n                    ? IMAGE_URL + profile_path\n                    : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                }\n                alt={name}\n                width={288}\n                height={432}\n              />\n\n              <ActorInfoWrapper>\n                <b>{name}</b>\n                <p>\n                  <b>Character:</b> {character}\n                </p>\n              </ActorInfoWrapper>\n            </ActorItem>\n          ))}\n        </ActorsList>\n      )}\n      {actors.length === 0 && !error && !isFetching && <p>There is no information here yet</p>}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.xl};\n  }\n`;\n\nexport const Img = styled.img`\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n","import img from '../../images/oops.png';\n\nimport { StyledError, Img } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <>\n      <StyledError>Something went wrong... Try reloading the page</StyledError>\n      <Img src={img} alt={'oops'} width={300} />\n    </>\n  );\n};\n\nexport default RequestError;\n","import { IMovie } from '../interfaces';\n\nexport const moviesMaper = (\n  movies: IMovie[]\n): Pick<IMovie, 'id' | 'title' | 'poster_path' | 'release_date' | 'vote_average'>[] => {\n  return movies.map(({ id, title, poster_path, release_date, vote_average }) => ({\n    id,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n  }));\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\nimport { IMovieById, IActor, IReview, IMoviesData } from '../interfaces';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async (page: number): Promise<IMoviesData> => {\n  const { data } = await axios(`${TRENGING_PATH}`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n\nexport const getMovieById = async (movieId: number): Promise<IMovieById> => {\n  const {\n    data: { id, title, poster_path, release_date, genres, overview, vote_average },\n  } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return { id, title, poster_path, release_date, genres, overview, vote_average };\n};\n\nexport const getCastsById = async (movieId: number): Promise<IActor[]> => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  const result = actorsMaper(data.cast);\n  return result;\n};\n\nexport const getMovieReviews = async (movieId: number): Promise<IReview[]> => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  const result = reviewsMaper(data.results);\n  return result;\n};\n\nexport const getMovieByQuery = async (query: string, page: number): Promise<IMoviesData> => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page,\n      include_adult: false,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n","import { IActor } from '../interfaces';\n\nexport const actorsMaper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n};\n","import { IReview } from '../interfaces';\n\nexport const reviewsMaper = (reviews: IReview[]): IReview[] => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["ActorsList","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","ActorItem","_templateObject2","ActorImg","_templateObject3","ActorInfoWrapper","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","error","setError","_useState5","_useState6","isFetching","setIsFetching","useEffect","_getActorsByMovieId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","getCastsById","sent","t0","Error","message","finish","stop","apply","arguments","_x","getActorsByMovieId","Number","_jsxs","_Fragment","children","_jsx","RequestError","Loader","length","map","_ref","id","name","profile_path","character","src","IMAGE_URL","alt","width","height","StyledError","fontSizes","m","xl","Img","img","moviesMaper","movies","title","poster_path","release_date","vote_average","axios","API_KEY","getTrendingMovies","page","_yield$axios","data","concat","params","api_key","abrupt","results","total_pages","getMovieById","_ref2","_callee2","_yield$axios2","_yield$axios2$data","genres","overview","_context2","language","_x2","_ref3","_callee3","_yield$axios3","_context3","cast","_x3","getMovieReviews","_ref4","_callee4","_yield$axios4","_context4","reviews","author","content","_x4","getMovieByQuery","_ref5","_callee5","query","_yield$axios$get","_context5","include_adult","_x5","_x6"],"sourceRoot":""}