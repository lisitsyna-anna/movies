{"version":3,"file":"static/js/105.644d33b1.chunk.js","mappings":"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","sources":["components/LoadMoreButton/LoadMoreButton.styled.ts","components/LoadMoreButton/LoadMoreButton.tsx","components/MoviesList/MoviesList.styled.ts","components/MoviesList/MoviesList.tsx","components/RequestError/RequestError.styled.ts","components/RequestError/RequestError.tsx","pages/HomePage/HomePage.styled.ts","pages/HomePage/HomePage.tsx","helpers/moviesMaper.ts","services/moviesApi.ts","helpers/actorsMaper.ts","helpers/reviewsMaper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 20px;\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.accentColor};\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  transition: background-color ease-in 250ms;\n\n  @media screen and (min-width: 1200px) {\n    padding: 10px 35px;\n    font-size: ${p => p.theme.fontSizes.xl};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import { Button } from './LoadMoreButton.styled';\n\ninterface ILoadMoreBtnProps {\n  onLoadMore: React.MouseEventHandler;\n  isFetching: boolean;\n}\n\nconst LoadMoreButton: React.FC<ILoadMoreBtnProps> = ({ onLoadMore, isFetching }) => {\n  return (\n    <Button type=\"button\" disabled={isFetching} onClick={onLoadMore}>\n      {isFetching ? 'Loading...' : 'Load More'}\n    </Button>\n  );\n};\n\nexport default LoadMoreButton;\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[7]}px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 10px;\n  box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -webkit-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -moz-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n  width: 100%;\n  padding-bottom: ${p => p.theme.space[4]}px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 1 * 16px) / 2);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 3 * 16px) / 4);\n  }\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Rating = styled.p`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${p => p.theme.colors.accentColor};\n  color: ${p => p.theme.colors.white};\n  padding: 5px 5px;\n  border-radius: 0 10px 0 10px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 10px 10px 0 0;\n  overflow: hidden;\n`;\n","import { Location } from 'history';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_URL } from '../../services';\nimport { IMovie } from '../../interfaces';\n\nimport {\n  MoviesListStyled,\n  MovieItem,\n  MovieInfo,\n  MovieName,\n  MovieImg,\n  RealeseDate,\n  ImgWrapper,\n  Rating,\n} from './MoviesList.styled';\n\ninterface IMovieListProps {\n  movies: IMovie[];\n  location: Location<{}>;\n}\n\nconst MoviesList: React.FC<IMovieListProps> = ({ movies, location }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(({ id, title, poster_path, release_date, vote_average }, index) => (\n        <MovieItem key={id}>\n          <Link to={`/serch-movie/${id}`} state={{ from: location }}>\n            <ImgWrapper>\n              <MovieImg\n                src={\n                  poster_path\n                    ? IMAGE_URL + poster_path\n                    : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                }\n                alt={title}\n                loading=\"lazy\"\n                width={288}\n                height={432}\n              />\n              <Rating>{vote_average.toFixed(1)} </Rating>\n            </ImgWrapper>\n\n            <MovieInfo>\n              <MovieName>{title ? title : 'There is no title here yet. '}</MovieName>\n              <RealeseDate>\n                {release_date ? new Date(release_date).getFullYear() : '---'}\n              </RealeseDate>\n            </MovieInfo>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.xl};\n  }\n`;\n\nexport const Img = styled.img`\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n","import img from '../../images/oops.png';\n\nimport { StyledError, Img } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <>\n      <StyledError>Something went wrong... Try reloading the page</StyledError>\n      <Img src={img} alt={'oops'} width={300} />\n    </>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { IMovie } from '../../interfaces';\n\nimport RequestError from '../../components/RequestError';\nimport MoviesList from '../../components/MoviesList';\nimport LoadMoreButton from '../../components/LoadMoreButton';\nimport { Title } from './HomePage.styled';\nimport { getTrendingMovies } from '../../services';\n\nconst HomePage: React.FC = () => {\n  const [trendingMovies, setTrendingMovies] = useState<IMovie[]>([]);\n  const [error, setError] = useState<null | string>(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isFetching, setIsFetching] = useState(false);\n  const location = useLocation();\n  console.log('totalPages', totalPages);\n  console.log('trendingMovies', trendingMovies);\n\n  useEffect(() => {\n    async function getMovies(page: number) {\n      try {\n        setIsFetching(true);\n        const { results, total_pages } = await getTrendingMovies(page);\n        setTotalPages(total_pages);\n        setTrendingMovies(prevMovies => {\n          return [...prevMovies, ...results];\n        });\n        setError(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setTrendingMovies([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n\n    getMovies(page);\n  }, [page]);\n\n  const handleLoadMoreBtn = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const showLoadMore = totalPages !== page && !error && trendingMovies.length > 0;\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {error && <RequestError />}\n      {trendingMovies?.length > 0 && <MoviesList movies={trendingMovies} location={location} />}\n      {showLoadMore && <LoadMoreButton onLoadMore={handleLoadMoreBtn} isFetching={isFetching} />}\n    </>\n  );\n};\n\nexport default HomePage;\n","import { IMovie } from '../interfaces';\n\nexport const moviesMaper = (\n  movies: IMovie[]\n): Pick<IMovie, 'id' | 'title' | 'poster_path' | 'release_date' | 'vote_average'>[] => {\n  return movies.map(({ id, title, poster_path, release_date, vote_average }) => ({\n    id,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n  }));\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\nimport { IMovieById, IActor, IReview, IMoviesData } from '../interfaces';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async (page: number): Promise<IMoviesData> => {\n  const { data } = await axios(`${TRENGING_PATH}`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n\nexport const getMovieById = async (movieId: number): Promise<IMovieById> => {\n  const {\n    data: { id, title, poster_path, release_date, genres, overview, vote_average },\n  } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return { id, title, poster_path, release_date, genres, overview, vote_average };\n};\n\nexport const getCastsById = async (movieId: number): Promise<IActor[]> => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  const result = actorsMaper(data.cast);\n  return result;\n};\n\nexport const getMovieReviews = async (movieId: number): Promise<IReview[]> => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  const result = reviewsMaper(data.results);\n  return result;\n};\n\nexport const getMovieByQuery = async (query: string, page: number): Promise<IMoviesData> => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page,\n      include_adult: false,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n","import { IActor } from '../interfaces';\n\nexport const actorsMaper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n};\n","import { IReview } from '../interfaces';\n\nexport const reviewsMaper = (reviews: IReview[]): IReview[] => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","p","theme","radii","normal","colors","accentColor","white","fontSizes","l","fontWeights","medium","xl","hoverColor","_ref","onLoadMore","isFetching","_jsx","type","disabled","onClick","children","MoviesListStyled","space","MovieItem","_templateObject2","MovieInfo","_templateObject3","MovieName","_templateObject4","m","RealeseDate","_templateObject5","ImgWrapper","_templateObject6","Rating","_templateObject7","MovieImg","_templateObject8","movies","location","map","_ref2","index","id","title","poster_path","release_date","vote_average","_jsxs","Link","to","concat","state","from","src","IMAGE_URL","alt","loading","width","height","toFixed","Date","getFullYear","StyledError","Img","_Fragment","img","Title","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","error","setError","_useState5","_useState6","page","setPage","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","setIsFetching","useLocation","console","log","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getTrendingMov","results","total_pages","wrap","_context","prev","next","getTrendingMovies","sent","prevMovies","_toConsumableArray","t0","Error","message","finish","stop","apply","arguments","_x","getMovies","showLoadMore","length","RequestError","MoviesList","LoadMoreButton","prevPage","moviesMaper","axios","API_KEY","_yield$axios","data","params","api_key","abrupt","getMovieById","_callee2","movieId","_yield$axios2","_yield$axios2$data","genres","overview","_context2","language","_x2","getCastsById","_ref3","_callee3","_yield$axios3","result","_context3","actors","cast","name","profile_path","character","_x3","getMovieReviews","_ref4","_callee4","_yield$axios4","_context4","reviews","author","content","_x4","getMovieByQuery","_ref5","_callee5","query","_yield$axios$get","_context5","include_adult","_x5","_x6"],"sourceRoot":""}