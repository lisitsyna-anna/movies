{"version":3,"file":"static/js/438.603f3bd8.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.ts","components/RequestError/RequestError.tsx","components/Reviews/Reviews.styled.ts","components/Reviews/Reviews.tsx","helpers/moviesMaper.ts","services/moviesApi.ts","helpers/actorsMaper.ts","helpers/reviewsMaper.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.xl};\n  }\n`;\n\nexport const Img = styled.img`\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n","import img from '../../images/oops.png';\n\nimport { StyledError, Img } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <>\n      <StyledError>Something went wrong... Try reloading the page</StyledError>\n      <Img src={img} alt={'oops'} width={300} />\n    </>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[6]}px;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 16px 16px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -webkit-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -moz-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n`;\n\nexport const AuthorInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Author = styled.p`\n  font-weight: 600;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport { getMovieReviews } from '../../services';\nimport { IReview } from '../../interfaces';\n\nimport RequestError from '../RequestError';\nimport Loader from '../Loader';\n\nimport { ReviewsList, ReviewItem, AuthorInfoWrapper, Author } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState<IReview[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviewsByMovieId(movieId: number) {\n      try {\n        setIsFetching(true);\n        const result = await getMovieReviews(movieId);\n        setReviews(result);\n        setError(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setReviews([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n\n    getReviewsByMovieId(Number(movieId));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && !isFetching && reviews.length === 0 && <RequestError />}\n      {isFetching && !error && <Loader />}\n      {reviews.length > 0 && !error && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <AuthorInfoWrapper>\n                <Avatar name={author} size={'30px'} round />\n                <Author>Author: {author}</Author>\n              </AuthorInfoWrapper>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      )}\n      {reviews.length === 0 && !error && !isFetching && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { IMovie } from '../interfaces';\n\nexport const moviesMaper = (\n  movies: IMovie[]\n): Pick<IMovie, 'id' | 'title' | 'poster_path' | 'release_date' | 'vote_average'>[] => {\n  return movies.map(({ id, title, poster_path, release_date, vote_average }) => ({\n    id,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n  }));\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\nimport { IMovieById, IActor, IReview, IMoviesData } from '../interfaces';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async (page: number): Promise<IMoviesData> => {\n  const { data } = await axios(`${TRENGING_PATH}`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n\nexport const getMovieById = async (movieId: number): Promise<IMovieById> => {\n  const {\n    data: { id, title, poster_path, release_date, genres, overview, vote_average },\n  } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return { id, title, poster_path, release_date, genres, overview, vote_average };\n};\n\nexport const getCastsById = async (movieId: number): Promise<IActor[]> => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  const result = actorsMaper(data.cast);\n  return result;\n};\n\nexport const getMovieReviews = async (movieId: number): Promise<IReview[]> => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  const result = reviewsMaper(data.results);\n  return result;\n};\n\nexport const getMovieByQuery = async (query: string, page: number): Promise<IMoviesData> => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page,\n      include_adult: false,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n","import { IActor } from '../interfaces';\n\nexport const actorsMaper = (actors: IActor[]): IActor[] => {\n  return actors.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n};\n","import { IReview } from '../interfaces';\n\nexport const reviewsMaper = (reviews: IReview[]): IReview[] => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","fontSizes","m","xl","Img","_templateObject2","_jsxs","_Fragment","children","_jsx","src","img","alt","width","ReviewsList","ReviewItem","radii","normal","AuthorInfoWrapper","_templateObject3","Author","_templateObject4","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","_useState5","_useState6","isFetching","setIsFetching","movieId","useParams","useEffect","_getReviewsByMovieId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","getMovieReviews","sent","t0","Error","message","finish","stop","apply","arguments","_x","getReviewsByMovieId","Number","length","RequestError","Loader","map","_ref","id","author","content","Avatar","name","size","round","moviesMaper","movies","title","poster_path","release_date","vote_average","axios","API_KEY","IMAGE_URL","getTrendingMovies","page","_yield$axios","data","concat","params","api_key","abrupt","results","total_pages","getMovieById","_ref2","_callee2","_yield$axios2","_yield$axios2$data","genres","overview","_context2","language","_x2","getCastsById","_ref3","_callee3","_yield$axios3","_context3","actors","cast","profile_path","character","_x3","_ref4","_callee4","_yield$axios4","_context4","_x4","getMovieByQuery","_ref5","_callee5","query","_yield$axios$get","_context5","include_adult","_x5","_x6"],"sourceRoot":""}