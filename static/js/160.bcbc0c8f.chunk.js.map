{"version":3,"file":"static/js/160.bcbc0c8f.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.ts","components/RequestError/RequestError.tsx","services/moviesApi.ts","helpers/moviesMaper.ts","components/MoviesList/MoviesList.styled.ts","components/MoviesList/MoviesList.tsx","components/LoadMoreButton/LoadMoreButton.styled.ts","components/LoadMoreButton/LoadMoreButton.tsx","pages/HomePage/HomePage.styled.ts","pages/HomePage/HomePage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  color: red;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return <StyledError>Something went wrong... Try reloading the page</StyledError>;\n};\n\nexport default RequestError;\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\nimport { IMovie, IMovieById, IActor, IReview, IThrendingMoviesData } from '../interfaces';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async (page: number): Promise<IThrendingMoviesData> => {\n  const { data } = await axios(`${TRENGING_PATH}`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  return {\n    page: data.page,\n    results: moviesMaper(data.results),\n    total_pages: data.total_pages,\n  };\n};\n\nexport const getMovieById = async (movieId: string): Promise<IMovieById> => {\n  const {\n    data: { id, title, poster_path, release_date, genres, overview, vote_average },\n  } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return { id, title, poster_path, release_date, genres, overview, vote_average };\n};\n\nexport const getCastsById = async (movieId: string): Promise<IActor[]> => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return actorsMaper(data.cast);\n};\n\nexport const getMovieReviews = async (movieId: string): Promise<IReview[]> => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return reviewsMaper(data.results);\n};\n\nexport const getMovieByQuery = async (\n  query: string\n): Promise<Pick<IMovie, 'id' | 'title' | 'poster_path' | 'release_date'>[]> => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return moviesMaper(data.results);\n};\n","import { IMovie } from '../interfaces';\n\nexport const moviesMaper = (\n  movies: IMovie[]\n): Pick<IMovie, 'id' | 'title' | 'poster_path' | 'release_date'>[] => {\n  return movies.map(({ id, title, poster_path, release_date }) => ({\n    id,\n    title,\n    poster_path,\n    release_date,\n  }));\n};\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[7]}px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 10px;\n  box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -webkit-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  -moz-box-shadow: 7px 7px 46px -9px rgba(0, 0, 0, 0.35);\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n  width: 100%;\n  padding-bottom: ${p => p.theme.space[4]}px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 1 * 16px) / 2);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 3 * 16px) / 4);\n  }\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n  border-radius: 10px 10px 0 0;\n  overflow: hidden;\n`;\n","import { Location } from 'history';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_URL } from '../../services';\nimport { IMovie } from '../../interfaces';\n\nimport {\n  MoviesListStyled,\n  MovieItem,\n  MovieInfo,\n  MovieName,\n  MovieImg,\n  RealeseDate,\n} from './MoviesList.styled';\n\ninterface IMovieListProps {\n  movies: IMovie[];\n  location: Location<{}>;\n}\n\nconst MoviesList: React.FC<IMovieListProps> = ({ movies, location }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(({ id, title, poster_path, release_date }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg\n              src={\n                poster_path\n                  ? IMAGE_URL + poster_path\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={title}\n              loading=\"lazy\"\n              width={250}\n            />\n            <MovieInfo>\n              <MovieName>{title ? title : 'There is no title here yet. '}</MovieName>\n              <RealeseDate>\n                {release_date ? new Date(release_date).getFullYear() : '---'}\n              </RealeseDate>\n            </MovieInfo>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 8px 20px;\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.accentColor};\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  transition: background-color ease-in 250ms;\n\n  @media screen and (min-width: 1200px) {\n    padding: 10px 35px;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import { Button } from './LoadMoreButton.styled';\n\ninterface ILoadMoreBtnProps {\n  onLoadMore: React.MouseEventHandler;\n  isFetching: boolean;\n}\n\nconst LoadMoreButton: React.FC<ILoadMoreBtnProps> = ({ onLoadMore, isFetching }) => {\n  return (\n    <Button type=\"button\" disabled={isFetching} onClick={onLoadMore}>\n      Load More\n    </Button>\n  );\n};\n\nexport default LoadMoreButton;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { IMovie } from '../../interfaces';\n\nimport RequestError from '../../components/RequestError';\nimport MoviesList from '../../components/MoviesList';\nimport LoadMoreButton from '../../components/LoadMoreButton';\nimport { Title } from './HomePage.styled';\nimport { getTrendingMovies } from '../../services';\n\nconst HomePage: React.FC = () => {\n  const [trendingMovies, setTrendingMovies] = useState<IMovie[]>([]);\n  const [error, setError] = useState<null | string>(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isShowLoadMoreBtn, setIsShowLoadMoreBtn] = useState(true);\n  const [isFetching, setIsFetching] = useState(false);\n  const location = useLocation();\n  console.log(totalPages);\n  console.log(setIsShowLoadMoreBtn);\n\n  useEffect(() => {\n    async function getMovies(page: number) {\n      try {\n        setIsFetching(true);\n        const { results, total_pages } = await getTrendingMovies(page);\n        setTotalPages(total_pages);\n        setTrendingMovies(prevMovies => {\n          return [...prevMovies, ...results];\n        });\n        setError(null);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          setTrendingMovies([]);\n        }\n      } finally {\n        setIsFetching(false);\n      }\n    }\n\n    getMovies(page);\n  }, [page]);\n\n  const handleLoadMoreBtn = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {error && <RequestError />}\n      {trendingMovies?.length > 0 && <MoviesList movies={trendingMovies} location={location} />}\n      {isShowLoadMoreBtn && (\n        <LoadMoreButton onLoadMore={handleLoadMoreBtn} isFetching={isFetching} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyledError","styled","_templateObject","_taggedTemplateLiteral","p","theme","space","fontSizes","xl","_jsx","children","axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","_yield$axios","data","wrap","_context","prev","next","concat","params","api_key","sent","abrupt","results","movies","map","id","title","poster_path","release_date","total_pages","stop","_x","apply","arguments","MoviesListStyled","MovieItem","_templateObject2","colors","hoverColor","MovieInfo","_templateObject3","MovieName","_templateObject4","m","RealeseDate","_templateObject5","MovieImg","_templateObject6","location","_ref2","_jsxs","Link","to","state","from","src","alt","loading","width","Date","getFullYear","Button","radii","normal","accentColor","white","fontWeights","medium","onLoadMore","isFetching","type","disabled","onClick","Title","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setPage","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","isShowLoadMoreBtn","setIsShowLoadMoreBtn","_useState11","_useState12","setIsFetching","useLocation","console","log","useEffect","_getMovies","_yield$getTrendingMov","prevMovies","_toConsumableArray","t0","Error","message","finish","getMovies","_Fragment","RequestError","length","MoviesList","LoadMoreButton","prevPage"],"sourceRoot":""}